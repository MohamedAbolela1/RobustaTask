// Generated by Dagger (https://dagger.dev).
package com.example.samplearch.addPhoto.data.repo;

import com.example.samplearch.addPhoto.data.remote.WeatherRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherRepository_Factory implements Factory<WeatherRepository> {
  private final Provider<WeatherRemoteDataSource> weatherRemoteDataSourceProvider;

  public WeatherRepository_Factory(
      Provider<WeatherRemoteDataSource> weatherRemoteDataSourceProvider) {
    this.weatherRemoteDataSourceProvider = weatherRemoteDataSourceProvider;
  }

  @Override
  public WeatherRepository get() {
    return newInstance(weatherRemoteDataSourceProvider.get());
  }

  public static WeatherRepository_Factory create(
      Provider<WeatherRemoteDataSource> weatherRemoteDataSourceProvider) {
    return new WeatherRepository_Factory(weatherRemoteDataSourceProvider);
  }

  public static WeatherRepository newInstance(WeatherRemoteDataSource weatherRemoteDataSource) {
    return new WeatherRepository(weatherRemoteDataSource);
  }
}
