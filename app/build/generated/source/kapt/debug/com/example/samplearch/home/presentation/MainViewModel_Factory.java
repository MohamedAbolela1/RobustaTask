// Generated by Dagger (https://dagger.dev).
package com.example.samplearch.home.presentation;

import com.example.samplearch.addPhoto.data.repo.SavePhotoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<SavePhotoRepository> addPhotoProvider;

  public MainViewModel_Factory(Provider<SavePhotoRepository> addPhotoProvider) {
    this.addPhotoProvider = addPhotoProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(addPhotoProvider.get());
  }

  public static MainViewModel_Factory create(Provider<SavePhotoRepository> addPhotoProvider) {
    return new MainViewModel_Factory(addPhotoProvider);
  }

  public static MainViewModel newInstance(SavePhotoRepository addPhoto) {
    return new MainViewModel(addPhoto);
  }
}
