// Generated by Dagger (https://dagger.dev).
package com.example.samplearch.addPhoto.data.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherRemoteDataSource_Factory implements Factory<WeatherRemoteDataSource> {
  private final Provider<WeatherApiService> weatherApiServiceProvider;

  public WeatherRemoteDataSource_Factory(Provider<WeatherApiService> weatherApiServiceProvider) {
    this.weatherApiServiceProvider = weatherApiServiceProvider;
  }

  @Override
  public WeatherRemoteDataSource get() {
    return newInstance(weatherApiServiceProvider.get());
  }

  public static WeatherRemoteDataSource_Factory create(
      Provider<WeatherApiService> weatherApiServiceProvider) {
    return new WeatherRemoteDataSource_Factory(weatherApiServiceProvider);
  }

  public static WeatherRemoteDataSource newInstance(WeatherApiService weatherApiService) {
    return new WeatherRemoteDataSource(weatherApiService);
  }
}
